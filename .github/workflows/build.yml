---
name: "Build"

on:
  push:
  pull_request:

jobs:
  dkms:
    name: "DKMS"
    strategy:
      matrix:
        distro:
          - name: "debian"
            tag: "11"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
    container:
      image: "docker://docker.io/library/${{ matrix.distro.name }}:${{ matrix.distro.tag }}"

    steps:
      - uses: "actions/checkout@v2"
      - name: "Install Debian Dependencies"
        if: matrix.distro.name == 'debian'
        run: |
          dpkg --add-architecture arm64
          apt-get update -q
          apt-get install -qy build-essential crossbuild-essential-arm64 device-tree-compiler dkms
      # This step grabbed from DKMS's own GitHub action logic
      - name: "Compute packaged kernel version"
        run: |
          KERNEL_VER=''
          if [ "${{ matrix.distro.name }}" = debian ] ; then
            KERNEL_VER="$(LANG=C dpkg --status linux-headers-arm64 | sed -n 's/^Depends: linux-headers-\(\S\+\)\( .*\)\?/\1/p' | head -n 1)"
          fi
          if [ -z "${KERNEL_VER}" ] ; then
            echo >&2 "Error: no kernel package found"
            exit 1
          fi
          echo "Found packaged kernel ${KERNEL_VER}"
          echo "KERNEL_VER=${KERNEL_VER}" >> "$GITHUB_ENV"
      - name: "Debug"
        run: |
          env | sort
      - name: "Link files"
        run: |
          ln -s $(pwd) /usr/src/cm4io-fan-${GITHUB_SHA}
      - name: "Build"
        id: "build"
        run: |
          dkms build -m cm4io-fan -v ${GITHUB_SHA} -k ${KERNEL_VER}
      - name: "Print make log"
        if: failure() && steps.build.conclusion == 'failure'
        run: |
          cat /var/lib/dkms/cm4io-fan/${GITHUB_SHA}/build/make.log
